blank <- ggplot(sum_SD, aes(x=time, y=mean, color=label.bwidth))+
coord_cartesian(ylim=c(0,1.7))+
scale_x_reverse(expand = expand_scale(mult = c(0.05,0)))+
scale_color_discrete()+
xlab("Time (Ma)")+
ylab(expression(atop(paste("SD["*Delta^13*C[bed-to-bed]~"(\u2030 VPDB)]"))))+
theme(axis.ticks.y = element_line(color="white"),
axis.text.y  = element_text(color="white", siz=6),
axis.line.y  = element_line(color="white"),
axis.title.y = element_text(color="white", size=7),
axis.title.x = element_text( size=7),
axis.text.x = element_text( size=6))
chrono <- data.frame(
name = c("Phanerozoic", "Precambrian",
"Cenozoic", "Mesozoic", "Paleozoic", "Neoproterozoic", "Mesoproterozoic", "Paleoproterozoic",
"","Neo.", "Paleogene", "Cretaceous", "Jurassic", "Triassic", "Permian", "Carbonifereous", "Devonian", "Silurian", "Ordovician", "Cambrian", "Ediacaran", "Cryogenian", "Tonian", "Stenian","Ectasian", "Calymmian"),
type = c(rep("Era",2), rep("Eon", 6), rep("Period", 18)),
top = c(0, 541, 0, 66.0, 251.902, 541, 1000, 1600, 0, 2.58, 23.03, 66.0, 145.0, 201.3, 251.902, 298.9, 358.9 , 419.2, 443.8 , 485.4, 541, 635, 720, 1000, 1200, 1400),
bottom = c(541,4600, 66.0, 251.902, 541, 1000, 1600, 2500, 2.58, 23.03, 66.0, 145.0, 201.3, 251.902, 298.9, 358.9, 419.2, 443.8, 485.4, 541, 635, 720, 1000, 1200, 1400, 1600),
R = c(154, 247, 249,  103, 153, 254 ,253 , 247, 249, 255, 253, 127, 52, 129, 240, 103, 203, 179, 0, 127, 254, 254, 254, 254, 253, 253),
G = c(217, 67, 249, 197, 192, 179, 180, 67, 249, 230, 154, 198, 178, 43, 64,165, 104,225,146, 160, 217, 204, 191, 217, 204, 192),
B = c(221, 112, 29, 202, 141, 66, 98, 112,   127, 25, 82, 78, 201, 146, 40, 153, 55, 182, 112, 86, 106, 92, 178, 154, 138, 122),
stringsAsFactors = FALSE)
pg <- ggplotGrob(blank)
library(ggplot2)
pg <- ggplotGrob(blank)
blank
??"ggplot element"
??"ggelement"
??"element"
?geom_rect
df <- data.frame(
x = rep(c(2, 5, 7, 9, 12), 2),
y = rep(c(1, 2), each = 5),
z = factor(rep(1:5, each = 2)),
w = rep(diff(c(0, 4, 6, 8, 10, 14)), 2)
)
ggplot(df, aes(x, y)) +
geom_tile(aes(fill = z), colour = "grey50")
ggplot(df, aes(x, y)) +
geom_point()
ggplot(df, aes(x, y)) +
geom_point()+
#################### STACK ###################
library(ggplot2)
library(png)
library(grid)
blank <- ggplot(NULL, aes(x=c(240,130,70), y=c(1,2,3), color=label.bwidth))+
coord_cartesian(ylim=c(0,1.7))+
scale_x_reverse(expand = expand_scale(mult = c(0.05,0)))+
scale_color_discrete()+
xlab("Time (Ma)")+
ylab(expression(atop(paste("SD["*Delta^13*C[bed-to-bed]~"(\u2030 VPDB)]"))))+
theme(axis.ticks.y = element_line(color="white"),
axis.text.y  = element_text(color="white", siz=6),
axis.line.y  = element_line(color="white"),
axis.title.y = element_text(color="white", size=7),
axis.title.x = element_text( size=7),
axis.text.x = element_text( size=6))
chrono <- data.frame(
name = c("Phanerozoic", "Precambrian",
"Cenozoic", "Mesozoic", "Paleozoic", "Neoproterozoic", "Mesoproterozoic", "Paleoproterozoic",
"","Neo.", "Paleogene", "Cretaceous", "Jurassic", "Triassic", "Permian", "Carbonifereous", "Devonian", "Silurian", "Ordovician", "Cambrian", "Ediacaran", "Cryogenian", "Tonian", "Stenian","Ectasian", "Calymmian"),
type = c(rep("Era",2), rep("Eon", 6), rep("Period", 18)),
top = c(0, 541, 0, 66.0, 251.902, 541, 1000, 1600, 0, 2.58, 23.03, 66.0, 145.0, 201.3, 251.902, 298.9, 358.9 , 419.2, 443.8 , 485.4, 541, 635, 720, 1000, 1200, 1400),
bottom = c(541,4600, 66.0, 251.902, 541, 1000, 1600, 2500, 2.58, 23.03, 66.0, 145.0, 201.3, 251.902, 298.9, 358.9, 419.2, 443.8, 485.4, 541, 635, 720, 1000, 1200, 1400, 1600),
R = c(154, 247, 249,  103, 153, 254 ,253 , 247, 249, 255, 253, 127, 52, 129, 240, 103, 203, 179, 0, 127, 254, 254, 254, 254, 253, 253),
G = c(217, 67, 249, 197, 192, 179, 180, 67, 249, 230, 154, 198, 178, 43, 64,165, 104,225,146, 160, 217, 204, 191, 217, 204, 192),
B = c(221, 112, 29, 202, 141, 66, 98, 112,   127, 25, 82, 78, 201, 146, 40, 153, 55, 182, 112, 86, 106, 92, 178, 154, 138, 122),
stringsAsFactors = FALSE)
pg <- ggplotGrob(blank)
chrono
blank
blank <- ggplot(NULL, aes(x=c(240,130,70), y=c(1,2,3), color="label.bwidth"red))+
coord_cartesian(ylim=c(0,1.7))+
scale_x_reverse(expand = expand_scale(mult = c(0.05,0)))+
scale_color_discrete()+
xlab("Time (Ma)")+
ylab(expression(atop(paste("SD["*Delta^13*C[bed-to-bed]~"(\u2030 VPDB)]"))))+
blank <- ggplot(NULL, aes(x=c(240,130,70), y=c(1,2,3), color="red"))+
coord_cartesian(ylim=c(0,1.7))+
scale_x_reverse(expand = expand_scale(mult = c(0.05,0)))+
scale_color_discrete()+
xlab("Time (Ma)")+
ylab(expression(atop(paste("SD["*Delta^13*C[bed-to-bed]~"(\u2030 VPDB)]"))))+
theme(axis.ticks.y = element_line(color="white"),
axis.text.y  = element_text(color="white", siz=6),
axis.line.y  = element_line(color="white"),
axis.title.y = element_text(color="white", size=7),
axis.title.x = element_text( size=7),
axis.text.x = element_text( size=6))
blank <- ggplot(NULL, aes(x=c(240,130,70), y=c(1,2,3)))+
coord_cartesian(ylim=c(0,1.7))+
scale_x_reverse(expand = expand_scale(mult = c(0.05,0)))+
scale_color_discrete()+
xlab("Time (Ma)")+
ylab(expression(atop(paste("SD["*Delta^13*C[bed-to-bed]~"(\u2030 VPDB)]"))))+
theme(axis.ticks.y = element_line(color="white"),
axis.text.y  = element_text(color="white", siz=6),
axis.line.y  = element_line(color="white"),
axis.title.y = element_text(color="white", size=7),
axis.title.x = element_text( size=7),
axis.text.x = element_text( size=6))
chrono <- data.frame(
name = c("Phanerozoic", "Precambrian",
"Cenozoic", "Mesozoic", "Paleozoic", "Neoproterozoic", "Mesoproterozoic", "Paleoproterozoic",
"","Neo.", "Paleogene", "Cretaceous", "Jurassic", "Triassic", "Permian", "Carbonifereous", "Devonian", "Silurian", "Ordovician", "Cambrian", "Ediacaran", "Cryogenian", "Tonian", "Stenian","Ectasian", "Calymmian"),
type = c(rep("Era",2), rep("Eon", 6), rep("Period", 18)),
top = c(0, 541, 0, 66.0, 251.902, 541, 1000, 1600, 0, 2.58, 23.03, 66.0, 145.0, 201.3, 251.902, 298.9, 358.9 , 419.2, 443.8 , 485.4, 541, 635, 720, 1000, 1200, 1400),
bottom = c(541,4600, 66.0, 251.902, 541, 1000, 1600, 2500, 2.58, 23.03, 66.0, 145.0, 201.3, 251.902, 298.9, 358.9, 419.2, 443.8, 485.4, 541, 635, 720, 1000, 1200, 1400, 1600),
R = c(154, 247, 249,  103, 153, 254 ,253 , 247, 249, 255, 253, 127, 52, 129, 240, 103, 203, 179, 0, 127, 254, 254, 254, 254, 253, 253),
G = c(217, 67, 249, 197, 192, 179, 180, 67, 249, 230, 154, 198, 178, 43, 64,165, 104,225,146, 160, 217, 204, 191, 217, 204, 192),
B = c(221, 112, 29, 202, 141, 66, 98, 112,   127, 25, 82, 78, 201, 146, 40, 153, 55, 182, 112, 86, 106, 92, 178, 154, 138, 122),
stringsAsFactors = FALSE)
pg <- ggplotGrob(blank)
j.plot <- unique(gtable::gtable_filter(pg, "panel", trim = FALSE)$layout$l)
i.axis <- unique(gtable::gtable_filter(pg, "axis-l", trim = FALSE)$layout$t)
x.range <- -1*ggplot_build(blank)$layout$panel_params[[1]]$x.range
y.range <- ggplot_build(blank)$layout$panel_params[[1]]$y.range
pg$heights[i.axis] <- pg$heights[i.axis] * 0.3
filter.chrono <- chrono %>% tbl_df() %>%
mutate(type = factor(type, levels = c("Era", "Eon","Period"))) %>%
arrange(desc(top)) %>%
arrange(type) %>%
filter(top <= max(x.range), bottom >= min(x.range)) %>%
rowwise() %>%
mutate(bottom = min(bottom, max(x.range)), top = max(top, min(x.range))) %>%
ungroup() %>%
mutate(width = (bottom - top) / (max(bottom) - min(top))) %>%
select(name, type, R, G, B, width)
library(dplyr)
filter.chrono <- chrono %>% tbl_df() %>%
mutate(type = factor(type, levels = c("Era", "Eon","Period"))) %>%
arrange(desc(top)) %>%
arrange(type) %>%
filter(top <= max(x.range), bottom >= min(x.range)) %>%
rowwise() %>%
mutate(bottom = min(bottom, max(x.range)), top = max(top, min(x.range))) %>%
ungroup() %>%
mutate(width = (bottom - top) / (max(bottom) - min(top))) %>%
select(name, type, R, G, B, width)
unique.types <-rev(unique(filter.chrono$type)) %>% as.character()
# create empty gtable
gt <- gtable(widths = unit(1, "null"),
heights = rep(unit(1, "null"),
times = length(unique.types)))
# fill gtable with individual table grobs for each type of geologic time, create dotted lines for unofficial units
for(i in seq_along(unique.types)){
install.packages("gtable")
install.packages("gtable")
blank <- ggplot(NULL, aes(x=c(240,130,70), y=c(1,2,3)))+
coord_cartesian(ylim=c(0,1.7))+
scale_x_reverse(expand = expand_scale(mult = c(0.05,0)))+
scale_color_discrete()+
xlab("Time (Ma)")+
ylab(expression(atop(paste("SD["*Delta^13*C[bed-to-bed]~"(\u2030 VPDB)]"))))+
theme(axis.ticks.y = element_line(color="white"),
axis.text.y  = element_text(color="white", siz=6),
axis.line.y  = element_line(color="white"),
axis.title.y = element_text(color="white", size=7),
axis.title.x = element_text( size=7),
axis.text.x = element_text( size=6))
chrono <- data.frame(
name = c("Phanerozoic", "Precambrian",
"Cenozoic", "Mesozoic", "Paleozoic", "Neoproterozoic", "Mesoproterozoic", "Paleoproterozoic",
"","Neo.", "Paleogene", "Cretaceous", "Jurassic", "Triassic", "Permian", "Carbonifereous", "Devonian", "Silurian", "Ordovician", "Cambrian", "Ediacaran", "Cryogenian", "Tonian", "Stenian","Ectasian", "Calymmian"),
type = c(rep("Era",2), rep("Eon", 6), rep("Period", 18)),
top = c(0, 541, 0, 66.0, 251.902, 541, 1000, 1600, 0, 2.58, 23.03, 66.0, 145.0, 201.3, 251.902, 298.9, 358.9 , 419.2, 443.8 , 485.4, 541, 635, 720, 1000, 1200, 1400),
bottom = c(541,4600, 66.0, 251.902, 541, 1000, 1600, 2500, 2.58, 23.03, 66.0, 145.0, 201.3, 251.902, 298.9, 358.9, 419.2, 443.8, 485.4, 541, 635, 720, 1000, 1200, 1400, 1600),
R = c(154, 247, 249,  103, 153, 254 ,253 , 247, 249, 255, 253, 127, 52, 129, 240, 103, 203, 179, 0, 127, 254, 254, 254, 254, 253, 253),
G = c(217, 67, 249, 197, 192, 179, 180, 67, 249, 230, 154, 198, 178, 43, 64,165, 104,225,146, 160, 217, 204, 191, 217, 204, 192),
B = c(221, 112, 29, 202, 141, 66, 98, 112,   127, 25, 82, 78, 201, 146, 40, 153, 55, 182, 112, 86, 106, 92, 178, 154, 138, 122),
stringsAsFactors = FALSE)
pg <- ggplotGrob(blank)
j.plot <- unique(gtable::gtable_filter(pg, "panel", trim = FALSE)$layout$l)
i.axis <- unique(gtable::gtable_filter(pg, "axis-l", trim = FALSE)$layout$t)
x.range <- -1*ggplot_build(blank)$layout$panel_params[[1]]$x.range
y.range <- ggplot_build(blank)$layout$panel_params[[1]]$y.range
pg$heights[i.axis] <- pg$heights[i.axis] * 0.3
# filter to only use stratigraphic bounds contained within the plot
library(dplyr)
filter.chrono <- chrono %>% tbl_df() %>%
mutate(type = factor(type, levels = c("Era", "Eon","Period"))) %>%
arrange(desc(top)) %>%
arrange(type) %>%
filter(top <= max(x.range), bottom >= min(x.range)) %>%
rowwise() %>%
mutate(bottom = min(bottom, max(x.range)), top = max(top, min(x.range))) %>%
ungroup() %>%
mutate(width = (bottom - top) / (max(bottom) - min(top))) %>%
select(name, type, R, G, B, width)
unique.types <-rev(unique(filter.chrono$type)) %>% as.character()
# create empty gtable
gt <- gtable(widths = unit(1, "null"),
heights = rep(unit(1, "null"),
times = length(unique.types)))
# create empty gtable
library(gtable)
gt <- gtable(widths = unit(1, "null"),
heights = rep(unit(1, "null"),
times = length(unique.types)))
# create empty gtable
library(gtable)
gt <- gtable(widths = unit(1, "null"),
heights = rep(unit(1, "null"),
times = length(unique.types)))
# create empty gtable
library(gtable)
gt <- gtable(widths = unit(1, "null"),
heights = rep(unit(1, "null"),
times = length(unique.types)))
??"unit()"
?unit
# create empty gtable
library(gtable)
library(ggplot2)
gt <- gtable(widths = unit(1, "null"),
heights = rep(unit(1, "null"),
times = length(unique.types)))
# fill gtable with individual table grobs for each type of geologic time, create dotted lines for unofficial units
for(i in seq_along(unique.types)){
period.df <- filter.chrono[filter.chrono$type == unique.types[i],]
# fonts
if(period.df$type=="Period")    fonts <- list(fontsize=5L)
if(period.df$type=="Eon")       fonts <- list(fontsize=6L)
if(period.df$type=="Era")       fonts <- list(fontsize=9L, fontface="bold")
# suppress font printing if small box
period.df  <-  period.df %>% mutate(abbr=abbreviate(name, minlength = 1, dot=TRUE)) %>% mutate(name= case_when(width < 0.25 ~ abbr, width >= 0.25 ~ name))
tt <- tableGrob(d = matrix(period.df$name, ncol=length(period.df$name), nrow=1), #transpose to get  horizontal geochron bar
cols = NULL, rows = NULL,
heights = unit(1, "null"),
widths = unit(period.df$width, "null"),
theme = ttheme_minimal(
core = list(bg_params = list(fill = rgb(period.df$R ,period.df$G, period.df$B, maxColorValue=255),
col = "black"),
fg_params = fonts)
))
gt <- gtable_add_grob(x = gt,
grobs = tt,
t = i, l = 1)
}
for(i in i.axis){
pg <- gtable_add_grob(x = pg,
grobs = gt,
t = i,
l = j.plot)
}
# convert other plots to grobs
TR  <- ggplotGrob(A)
EVO <- ggplotGrob(B)
EVO$heights[i.axis] <- EVO$heights[i.axis] * 0.3
# convert other plots to grobs
TR  <- ggplotGrob(A)
EVO <- ggplotGrob(B)
grid.draw(co )
co <-  rbind(TR ,EVO, pg,  size = "first")
grid.draw(co )
?gtable
library(grid)
a <- gtable(unit(1:3, c("cm")), unit(5, "cm"))
a
gtable_show_layout(a)
rect <- rectGrob(gp = gpar(fill = "black"))
a <- gtable_add_grob(a, rect, 1, 1)
a
plot(a)
dim(a)
t(a)
plot(t(a))
b <- gtable(unit(c(2, 2, 2), "cm"), unit(c(2, 2, 2), "cm"))
b <- gtable_add_grob(b, rect, 2, 2)
b[1, ]
b[, 1]
b[2, 2]
rownames(b) <- 1:3
rownames(b)[2] <- 200
colnames(b) <- letters[1:3]
dimnames(b)
a
plot(a)
library(grid)
a <- gtable(unit(1:3, c("cm")), unit(5, "cm"))
a
gtable_show_layout(a)
library(grid)
a <- gtable(unit(1:3, c("cm")), unit(5, "cm"))
a
gtable_show_layout(a)
library(grid)
a <- gtable(unit(1, c("cm")), unit(5, "cm"))
a
gtable_show_layout(a)
library(grid)
a <- gtable(unit(2, c("cm")), unit(5, "cm"))
a
gtable_show_layout(a)
library(grid)
a <- gtable(unit(5, c("cm")), unit(5, "cm"))
a
gtable_show_layout(a)
library(grid)
a <- gtable(unit(1:2, c("cm")), unit(5, "cm"))
a
gtable_show_layout(a)
library(grid)
a <- gtable(unit(1:5, c("cm")), unit(5, "cm"))
a
gtable_show_layout(a)
library(grid)
a <- gtable(unit(c(1,5), c("cm")), unit(5, "cm"))
a
gtable_show_layout(a)
a <- gtable(unit(c(1,5), c("cm")), unit(4, "cm")) # basic layout
a <- gtable(unit(c(1,5), c("cm")), unit(4, "cm")) # basic layout
a
gtable_show_layout(a)
a <- gtable(unit(c(1,7), c("cm")), unit(7, "cm")) # basic layout
a
gtable_show_layout(a)
?gtable
a <- gtable(unit(c(1,5), c("cm")), unit(5, "cm")) # basic layout
a
gtable_show_layout(a)
# Add a grob:
rect <- rectGrob(gp = gpar(fill = "black"))
rect
plot(rect)
# Add a grob:
rect <- rectGrob(gp = gpar(fill = "black"))
a <- gtable_add_grob(a, rect, 1, 1)
a
plot(a)
gtable_show_layout(a)
a <- gtable_add_grob(a, rect, 1, 1)
plot(a)
?gtable_add_grob
gg1 <- ggplot(NULL, aes(x=c(1,2), y=c(3,6)))+ geom_point()
gg1
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+ geom_point()
gg1
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+ geom_line()
gg1
# add more
rect2 <- rectGrob(gp = gpar(fill = "red"))
b <- gtable_add_grob(a, rect, 2, 2)
b
plot(b)
b <- gtable_add_grob(a, rect, 1, 2)
b
plot(b)
# add more
rect2 <- rectGrob(gp = gpar(fill = "red"))
b <- gtable_add_grob(a, rect2, 1, 2)
b
plot(b)
d <- gtable_add_grob(a, gg1, 1, 2)
d
plot(d)
plot(b)
library(gridGraphics)
?grob
grob(gg1)
gg1g <- grob(gg1)
d <- gtable_add_grob(a, gg1g, 1, 2)
d
plot(d)
gg1g
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+ geom_line()
gg1
gg1g <- grob(gg1)
?as.grob
install.packages("gridGraphics")
library(gridGraphics)
grab_grob <- function(){
grid.echo()
grid.grab()
}
g <- grab_grob()
b <- ggplot(cars,aes(x=speed,y=dist))+geom_line()
b <- ggplot(mtcars,aes(x=speed,y=dist))+geom_line()
grid.arrange(
b,g,
ncol=1
)
library(gridExtra)
grid.arrange(
b,g,
ncol=1
)
g <- grab_grob()
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+ geom_line()
g <- grab_grob()
?ggplotGrob
gg1g <- ggplotGrob(gg1)
d <- gtable_add_grob(a, gg1g, 1, 2)
d
plot(d)
?gtable
a <- gtable(unit(c(1,5), c("cm")), unit(5, "cm"), respect = TRUE) # basic layout
a
gtable_show_layout(a)
a <- gtable(unit(c(1,5), c("cm")), unit(5, "cm"), respect = FALSE) # basic layout
a
gtable_show_layout(a)
library(png)
install.packages("png")
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
library(png)
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
img
g <- rasterGrob(img, interpolate=TRUE)
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+ geom_line()
gg1g <- ggplotGrob(gg1)
a <- gtable_add_grob(a, g, 1, 1)
plot(a)
# add more
a <- gtable_add_grob(a, gg1g, 1, 2)
plot(a)
library(png)
library(grid)
library(gtable)
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
g <- rasterGrob(img, interpolate=TRUE)
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()
gg1g <- ggplotGrob(gg1)
a <- gtable(unit(c(1,5), c("cm")), unit(5, "cm"), respect = FALSE) # basic layout
gtable_show_layout(a)
a <- gtable_add_grob(a, g, 1, 1)
plot(a)
# add more
a <- gtable_add_grob(a, gg1g, 1, 2)
plot(a)
library(ggplot2)
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
g <- rasterGrob(img, interpolate=TRUE)
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()
gg1g <- ggplotGrob(gg1)
a <- gtable(unit(c(1,5), c("cm")), unit(5, "cm"), respect = FALSE) # basic layout
gtable_show_layout(a)
a <- gtable_add_grob(a, g, 1, 1)
plot(a)
# add more
a <- gtable_add_grob(a, gg1g, 1, 2)
plot(a)
grid.draw(a)
grid.draw(a)
grid.newpage()
grid.draw(a)
a <- gtable(unit(c(3,10), c("cm")), unit(10, "cm"), ) # basic layout
gtable_show_layout(a)
a <- gtable_add_grob(a, g, 1, 1)
plot(a)
# add more
a <- gtable_add_grob(a, gg1g, 1, 2)
grid.newpage()
grid.draw(a)
?read.PDF
?readPDF
read PDF
#img <- readPDF(system.file("img", "Rlogo.png", package="png"))
img <- readPNG("compolog.png")
#img <- readPDF(system.file("img", "Rlogo.png", package="png"))
img <- readPNG("compolog.png")
setwd("~/Work/analysis")
#img <- readPDF(system.file("img", "Rlogo.png", package="png"))
img <- readPNG("compolog.png")
g <- rasterGrob(img, interpolate=TRUE)
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()
gg1g <- ggplotGrob(gg1)
a <- gtable(unit(c(3,10), c("cm")), unit(10, "cm"), ) # basic layout
gtable_show_layout(a)
a <- gtable_add_grob(a, g, 1, 1)
plot(a)
# add more
a <- gtable_add_grob(a, gg1g, 1, 2)
grid.newpage()
grid.draw(a)
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()+
theme(plot.margin=unit(c(0,0,0,0),"mm"))
gg1
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()+
theme(plot.margin=unit(c(-1,-1,1-,1-),"mm"))
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()+
theme(plot.margin=unit(c(-1,-1,-1,-1),"mm"))
gg1g <- ggplotGrob(gg1)
gg1
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()+
theme(plot.margin=unit(c(-2,-1,-1,-1),"mm"))
gg1
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()+
labs(x=NULL, y=NULL)
gg1
gg1g <- ggplotGrob(gg1)
a <- gtable(unit(c(3,10), c("cm")), unit(10, "cm"), ) # basic layout
gtable_show_layout(a)
a <- gtable_add_grob(a, g, 1, 1)
plot(a)
# add more
a <- gtable_add_grob(a, gg1g, 1, 2)
grid.newpage()
grid.draw(a)
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
