geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_discrete("")+scale_y_continuous("Stage length (myr)")
kruskal.test(ics$stage_length, ics$period)
install.packages("VIM")
# vim missing data
library(VIM)
install.packages("lmtest")
install.packages("zoo")
install.packages("lmtest")
install.packages("VIM")
# vim missing data
library(VIM)
?VIM
# vim missing data
library(mice)
md.pattern(data)
data
data <- airquality
md.pattern(data)
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data),
cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
aggr_plot
aggr_plot
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data),
cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
md.pattern(data)
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data),
cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
# missing data
library(VIM)
setwd("~/Work/Review/Paleontologia Electronica/PEMSATS_downloads_1550738864")
#data<-read.csv("SI 2- Self-archiving policies - Palaeontology.csv")
data<-read.csv("968_SI_2_2.csv")
str(data)
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data),
cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
ncol(data)
names(data)
View(data)
# missing data
data_sub <- data[,c(2:5, 7:11)]
names(data_sub)
aggr_plot <- aggr(data_sub, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data),
cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
str(data_sub)
data_sub$X2017.Impact.Factor <- as.numeric(as.character(data_sub$X2017.Impact.Factor))
str(data_sub)
aggr_plot <- aggr(data_sub, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE,
labels=names(data), cex.axis=.7, gap=3,
ylab=c("Histogram of missing data","Pattern"))
aggr_plot <- aggr(data_sub, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE,
labels=names(data), cex.axis=.7, gap=3,
ylab=c("Histogram of missing data","Pattern"))
na.omit(data_sub)
library(gbm)
names(data_sub)
gbm1 <- gbm(data=data, APC...USD.~)
?gbm
gbm1 <- gbm(data=data, APC...USD.~.)
gbm1 <- gbm(data=data_sub, APC...USD.~.)
is.na(data_sub$APC...USD.)
which(is.na(data_sub$APC...USD.))
data_gbm <- data_sub[-which(is.na(data_sub$APC...USD.)),]
gbm1 <- gbm(data=data_gbm, APC...USD.~.)
gbm1
plot(gbm1)
summary(gbm1)
dev.off()
summary(gbm1)
plot.gbm(gbm1)
varImp(gbm1)
summary(gbm1)
summary(gbm1)$var
ggplot(summary(gbm1), aes(x=var, y=rel.inf))+
geom_point()
ggplot(summary(gbm1), aes(x=var, y=rel.inf))+
geom_bar(stat = "identity")
ggplot(summary(gbm1), aes(x=var, y=rel.inf))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(summary(gbm1), aes(x=var, y=rel.inf))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot(gbm1)
plot(gbm1, i.var=2)
plot(gbm1, i.var=1)
plot(gbm1, i.var=3)
plot(gbm1, i.var=2)
plot(gbm1, i.var=1)
plot(gbm1, i.var=3)
plot(gbm1, i.var=4)
plot(gbm1, i.var=5)
plot(gbm1, i.var=6)
plot(gbm1, i.var=7)
plot(gbm1, i.var=8)
# vim missing data
library(mice)
data <- airquality
md.pattern(data)
# The better option
library(VIM)
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data),
cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
library(leaflet)
leaflet() %>%
addTiles()
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite")
# Print the providers list included in the leaflet library
providers
leaflet() %>%
addProviderTiles("NASAGIBS.ViirsEarthAtNight2012")
library(leaflet)
leaflet() %>%
addProviderTiles("OpenTopoMap")
# Print only the names of the map tiles in the providers list
names(providers)
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
#fitBounds(
#  lng1 = 13, lat1 = 53,
#  lng2 = 14, lat2 = 52) %>%
addMarkers(lng = c(13.379609, 13.348745), lat = c(52.529969, 52.550721))
library(htmlwidgets)
library(leaflet)
coords <- data.frame(lng = c(13.379609, 13.347779),
lat = c(52.529969, 52.548627),
location = c("Work", "Nussbreite"),
marker = c("frog.png", "drink.png"))
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
addMarkers(lng=coords$lng, lat=coords$lat, popup = coords$location)
m = leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
addMarkers(lng=coords$lng, lat=coords$lat, popup = coords$location,
icon = icons(iconUrl = c("frog.png", "drink.png"), iconWidth = 40, iconHeight = 40)
)
library(htmlwidgets)
?colorbrewe
?colorbrewer
leaflet() %>% addMarkers(
data = iconData,
icon = ~ icons(
iconUrl = sprintf("http://leafletjs.com/examples/custom-icons/leaf-%s.png", group),
shadowUrl = "http://leafletjs.com/examples/custom-icons/leaf-shadow.png",
iconWidth = 38, iconHeight = 95, shadowWidth = 50, shadowHeight = 64,
iconAnchorX = 22, iconAnchorY = 94, shadowAnchorX = 4, shadowAnchorY = 62,
popupAnchorX = -3, popupAnchorY = -76
)
)
library(dplyr)
mtcars %<% colSums()
library(dplyr)
mtcars %<% colSums()
mtcars %>% colSums()
mtcars %>% colSums
mtcars$cyl %>% log
mtcars %>% summary
?%>%
?"%>%"
mtcars$cyl %<>% log
library(magrittr)
?`magrittr-package`
mtcars$cyl %<>% log
mtcars$cyl
m = leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
addMarkers(lng=coords$lng, lat=coords$lat, popup = coords$location,
icon = icons(iconUrl = c("frog.png", "drink.png"), iconWidth = 40, iconHeight = 40)
)
m
# Leaflet exercise
library(leaflet)
leaflet() %>%
addTiles()
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite")
# Print the providers list included in the leaflet library
providers
leaflet() %>%
addProviderTiles("NASAGIBS.ViirsEarthAtNight2012")
library(leaflet)
leaflet() %>%
addProviderTiles("OpenTopoMap")
# Print only the names of the map tiles in the providers list
names(providers)
# get coordinates # GOOGLE API ALERT
#library(ggmap)
#geocode("350 5th Ave, New York, NY 10118")
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
#fitBounds(
#  lng1 = 13, lat1 = 53,
#  lng2 = 14, lat2 = 52) %>%
addMarkers(lng = c(13.379609, 13.348745), lat = c(52.529969, 52.550721))
library(htmlwidgets)
library(leaflet)
coords <- data.frame(lng = c(13.379609, 13.347779),
lat = c(52.529969, 52.548627),
location = c("Work", "Nussbreite"),
marker = c("frog.png", "drink.png"))
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
addMarkers(lng=coords$lng, lat=coords$lat, popup = coords$location)
m = leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
addMarkers(lng=coords$lng, lat=coords$lat, popup = coords$location,
icon = icons(iconUrl = c("frog.png", "drink.png"), iconWidth = 40, iconHeight = 40)
)
m
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
addMarkers(lng=coords$lng, lat=coords$lat, popup = coords$location,
icon = icons(iconUrl = c("frog.png", "drink.png"), iconWidth = 40, iconHeight = 40)
)
setwd("~/Work/analysis")
m = leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
addMarkers(lng=coords$lng, lat=coords$lat, popup = coords$location,
icon = icons(iconUrl = c("frog.png", "drink.png"), iconWidth = 40, iconHeight = 40)
)
m
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/Documents/Eryops1.github.io")
rmarkdown::render_site()
library(map)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
?maps
?providerTileOptions
?map
map("germany")
map("europe")
help(package='maps')
rmarkdown::render_site()
rmarkdown::render_site()
install.packages("rmarkdown")
rmarkdown::render_site()
install.packages("htmlwidgets")
rmarkdown::render_site()
install.packages("leaflet")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
?eslint
??eslint
leavelet
leavlet
??leavelet
??leaflet
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
install.packages('leaflet')
install.packages('terra')
install.packages('terra')
install.packages('rgdal')
install.packages('terra')
install.packages('leaflet')
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
library(mapview)
install.packages("mapview")
install.packages("svglite")
install.packages("mapview")
mapview(breweries)
mapview::mapview(breweries)
library(mapview)
library(data.table)
library(terra)
coord <- data.table(lng = c(10.23211958),
lat = c(56.17757855),
location = c("Den Permanente"))
coord
coord
vect(coord)
coord <- vect(x, geom=c("lon", "lat"), crs="", keepgeom=FALSE)
coord <- data.frame(lon = c(10.23211958),
lat = c(56.17757855),
location = c("Den Permanente"))
coord <- vect(x, geom=c("lon", "lat"), crs="", keepgeom=FALSE)
coord
coord
coord <- data.frame(lon = c(10.23211958),
lat = c(56.17757855),
location = c("Den Permanente"))
coord
coord <- vect(coord, geom=c("lon", "lat"), crs="", keepgeom=FALSE)
mapview(coord)
coord <- vect(coord, geom=c("lon", "lat"), crs="4326", keepgeom=FALSE)
coord <- data.frame(lon = c(10.23211958),
lat = c(56.17757855),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="4326", keepgeom=FALSE)
coord <- data.frame(lon = c(10.23211958),
lat = c(56.17757855),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
coord
mapview(coord)
coord <- data.frame(lon = c(10.232119585),
lat = c(56.17757854),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.232119585),
lat = c(56.1775785),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.232119585),
lat = c(56.177578),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.232119585),
lat = c(56.177570),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.232119585),
lat = c(56.17750),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.232119585),
lat = c(56.176),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.2321190),
lat = c(56.1762),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.23210),
lat = c(56.1762),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.2320),
lat = c(56.1762),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.231),
lat = c(56.1762),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.2311),
lat = c(56.1762),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.2311),
lat = c(56.17621),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.2311),
lat = c(56.17625),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.2311),
lat = c(56.1763),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.2311),
lat = c(56.177),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.2311),
lat = c(56.1767),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.2313),
lat = c(56.1767),
location = c("Den Permanente"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
coord <- data.frame(lon = c(10.2313, 10.199115615439986),
lat = c(56.1767, 56.16692355244127),
location = c("Den Permanente", "Work"))
coord <- vect(coord, geom=c("lon", "lat"), crs="EPSG:4326", keepgeom=FALSE)
mapview(coord)
buffer(coord)
buffer(coord, 50)
buf <- buffer(coord, 50)
mapview(coord)+mapview(buf)
buf <- buffer(coord, 500)
mapview(coord)+mapview(buf)
mapview(coord)+mapview(buf, legend=F)
mapview(coord)+mapview(buf, legend=F, alpha=0)
mapview(coord)+mapview(buf, legend=F, fill=NA)
mapview(coord)+mapview(buf, legend=F, alpha.regions = 0.2)
library(rgbif)
install.packages("rgbif")
rmarkdown::render_site()
library(rgbif)
rgbif::occ_search(scientificName = "Erinaceus europaeus")
key <- name_suggest(q='Erinaceus europaeus', rank='species')$data$key[1]
key
rgbif::occ_download(key, limit=500)
library(rWCVP)
install.packages("rWCVP")
# meles: https://doi.org/10.15468/dl.rq4vn7
dat = fread("meles.csv")
dat
dat
head(dat)
# coord <- data.frame(lon = c(10.2313, 10.199115615439986),
#                      lat = c(56.1767, 56.16692355244127),
#                      location = c("Den Permanente", "Work"))
coord <- vect(dat, geom=c("decimalLongitude", "decimalLatitude"), crs="EPSG:4326", keepgeom=FALSE)
hull <- chull(coord)
hull <- terra::convHull(coord)
mapview(coord)+mapview(hull, legend=F, alpha.regions = 0.2)
mapview(coord, z=month)+mapview(hull, legend=F, alpha.regions = 0.2)
mapview(coord, zcol=month)+mapview(hull, legend=F, alpha.regions = 0.2)
coord
View(coords)
View(coord)
mapview(coord, zcol='month')+mapview(hull, legend=F, alpha.regions = 0.2)
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
mapview(coord, zcol='month')+mapview(hull, legend=F, alpha.regions = 0.2)
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
