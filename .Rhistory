rect2 <- rectGrob(gp = gpar(fill = "red"))
b <- gtable_add_grob(a, rect, 2, 2)
b
plot(b)
b <- gtable_add_grob(a, rect, 1, 2)
b
plot(b)
# add more
rect2 <- rectGrob(gp = gpar(fill = "red"))
b <- gtable_add_grob(a, rect2, 1, 2)
b
plot(b)
d <- gtable_add_grob(a, gg1, 1, 2)
d
plot(d)
plot(b)
library(gridGraphics)
?grob
grob(gg1)
gg1g <- grob(gg1)
d <- gtable_add_grob(a, gg1g, 1, 2)
d
plot(d)
gg1g
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+ geom_line()
gg1
gg1g <- grob(gg1)
?as.grob
install.packages("gridGraphics")
library(gridGraphics)
grab_grob <- function(){
grid.echo()
grid.grab()
}
g <- grab_grob()
b <- ggplot(cars,aes(x=speed,y=dist))+geom_line()
b <- ggplot(mtcars,aes(x=speed,y=dist))+geom_line()
grid.arrange(
b,g,
ncol=1
)
library(gridExtra)
grid.arrange(
b,g,
ncol=1
)
g <- grab_grob()
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+ geom_line()
g <- grab_grob()
?ggplotGrob
gg1g <- ggplotGrob(gg1)
d <- gtable_add_grob(a, gg1g, 1, 2)
d
plot(d)
?gtable
a <- gtable(unit(c(1,5), c("cm")), unit(5, "cm"), respect = TRUE) # basic layout
a
gtable_show_layout(a)
a <- gtable(unit(c(1,5), c("cm")), unit(5, "cm"), respect = FALSE) # basic layout
a
gtable_show_layout(a)
library(png)
install.packages("png")
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
library(png)
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
img
g <- rasterGrob(img, interpolate=TRUE)
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+ geom_line()
gg1g <- ggplotGrob(gg1)
a <- gtable_add_grob(a, g, 1, 1)
plot(a)
# add more
a <- gtable_add_grob(a, gg1g, 1, 2)
plot(a)
library(png)
library(grid)
library(gtable)
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
g <- rasterGrob(img, interpolate=TRUE)
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()
gg1g <- ggplotGrob(gg1)
a <- gtable(unit(c(1,5), c("cm")), unit(5, "cm"), respect = FALSE) # basic layout
gtable_show_layout(a)
a <- gtable_add_grob(a, g, 1, 1)
plot(a)
# add more
a <- gtable_add_grob(a, gg1g, 1, 2)
plot(a)
library(ggplot2)
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
g <- rasterGrob(img, interpolate=TRUE)
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()
gg1g <- ggplotGrob(gg1)
a <- gtable(unit(c(1,5), c("cm")), unit(5, "cm"), respect = FALSE) # basic layout
gtable_show_layout(a)
a <- gtable_add_grob(a, g, 1, 1)
plot(a)
# add more
a <- gtable_add_grob(a, gg1g, 1, 2)
plot(a)
grid.draw(a)
grid.draw(a)
grid.newpage()
grid.draw(a)
a <- gtable(unit(c(3,10), c("cm")), unit(10, "cm"), ) # basic layout
gtable_show_layout(a)
a <- gtable_add_grob(a, g, 1, 1)
plot(a)
# add more
a <- gtable_add_grob(a, gg1g, 1, 2)
grid.newpage()
grid.draw(a)
?read.PDF
?readPDF
read PDF
#img <- readPDF(system.file("img", "Rlogo.png", package="png"))
img <- readPNG("compolog.png")
#img <- readPDF(system.file("img", "Rlogo.png", package="png"))
img <- readPNG("compolog.png")
setwd("~/Work/analysis")
#img <- readPDF(system.file("img", "Rlogo.png", package="png"))
img <- readPNG("compolog.png")
g <- rasterGrob(img, interpolate=TRUE)
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()
gg1g <- ggplotGrob(gg1)
a <- gtable(unit(c(3,10), c("cm")), unit(10, "cm"), ) # basic layout
gtable_show_layout(a)
a <- gtable_add_grob(a, g, 1, 1)
plot(a)
# add more
a <- gtable_add_grob(a, gg1g, 1, 2)
grid.newpage()
grid.draw(a)
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()+
theme(plot.margin=unit(c(0,0,0,0),"mm"))
gg1
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()+
theme(plot.margin=unit(c(-1,-1,1-,1-),"mm"))
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()+
theme(plot.margin=unit(c(-1,-1,-1,-1),"mm"))
gg1g <- ggplotGrob(gg1)
gg1
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()+
theme(plot.margin=unit(c(-2,-1,-1,-1),"mm"))
gg1
gg1 <- ggplot(NULL, aes(x=c(1:3), y=c(3,4,6)))+
geom_line()+
labs(x=NULL, y=NULL)
gg1
gg1g <- ggplotGrob(gg1)
a <- gtable(unit(c(3,10), c("cm")), unit(10, "cm"), ) # basic layout
gtable_show_layout(a)
a <- gtable_add_grob(a, g, 1, 1)
plot(a)
# add more
a <- gtable_add_grob(a, gg1g, 1, 2)
grid.newpage()
grid.draw(a)
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
theme=theme_set(theme_minimal())
library(ggplot2)
library(scales)
library(mice)
library(SiZer)
library(gridExtra)
library(reshape)
theme=theme_set(theme_minimal())
if(getwd()=="/home/mel"){setwd("~/Work/Manuscripts/MS3")
}
knitr::opts_chunk$set(echo = FALSE, warnings=FALSE, message = FALSE, fig.path="figures/", dev=c("pdf", "png"))
dat.raw <- read.csv("model_data.csv")
dat <- dat.raw[,c("ma_range", "lat_range", "gcd", "svl", "mean_lat",
"min_lat", "abu_cat")]
dat$abu_cat <- as.factor(dat$abu_cat)
comb2 <- read.csv("../MS2/comb2.csv")
ggplot(dat, aes(x=age_mean, y=log1p(ma_range)))+
geom_point()+
scale_x_reverse()
ggplot(dat, aes(x=period, y=ma_range))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
kruskal.test(dat$ma_range, dat$period)
pairwise.wilcox.test(dat$ma_range, dat$period, p.adjust.method = "fdr")
tapply(dat$ma_range, dat$period, describe)
ggplot(dat, aes(x=order, y=ma_range))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
pairwise.wilcox.test(dat$ma_range, dat$order, p.adjust.method = "fdr")
tapply(dat$ma_range, dat$order, describe)
summary(lm(data=dat, ma_range~order+period))
# stage lengths in the Cretaceous? maybe this causes longer lifespans?
ics <- read.csv("stages_may2014.csv")
ics$stage_length <- ics$age_low - ics$age_high
attach(ics)
ics$period[age_mean < 358.9 & age_mean > 298] <- "Carboniferous"
ics$period[age_mean < 298.9 & age_mean > 252.17] <- "Permian"
ics$period[age_mean < 252.17 & age_mean > 201.3] <- "Triassic"
ics$period[age_mean < 201.3 & age_mean > 145.0] <- "Jurassic"
ics$period[age_mean < 145.0 & age_mean > 66.0] <- "Cretaceous"
ics$period[age_mean < 66.0 & age_mean > 23.03] <- "Paleogene"
ics$period[age_mean < 23.03 & age_mean > 0] <- "Neogene"
detach(ics)
ics <- na.omit(ics)
ics$period <- factor(ics$period, levels = c("Carboniferous", "Permian", "Triassic", "Jurassic",
"Cretaceous", "Paleogene", "Neogene"))
ggplot(ics, aes(x=period, y=stage_length))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_discrete("")+scale_y_continuous("Stage length (myr)")
kruskal.test(ics$stage_length, ics$period)
install.packages("VIM")
# vim missing data
library(VIM)
install.packages("lmtest")
install.packages("zoo")
install.packages("lmtest")
install.packages("VIM")
# vim missing data
library(VIM)
?VIM
# vim missing data
library(mice)
md.pattern(data)
data
data <- airquality
md.pattern(data)
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data),
cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
aggr_plot
aggr_plot
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data),
cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
md.pattern(data)
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data),
cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
# missing data
library(VIM)
setwd("~/Work/Review/Paleontologia Electronica/PEMSATS_downloads_1550738864")
#data<-read.csv("SI 2- Self-archiving policies - Palaeontology.csv")
data<-read.csv("968_SI_2_2.csv")
str(data)
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data),
cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
ncol(data)
names(data)
View(data)
# missing data
data_sub <- data[,c(2:5, 7:11)]
names(data_sub)
aggr_plot <- aggr(data_sub, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data),
cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
str(data_sub)
data_sub$X2017.Impact.Factor <- as.numeric(as.character(data_sub$X2017.Impact.Factor))
str(data_sub)
aggr_plot <- aggr(data_sub, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE,
labels=names(data), cex.axis=.7, gap=3,
ylab=c("Histogram of missing data","Pattern"))
aggr_plot <- aggr(data_sub, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE,
labels=names(data), cex.axis=.7, gap=3,
ylab=c("Histogram of missing data","Pattern"))
na.omit(data_sub)
library(gbm)
names(data_sub)
gbm1 <- gbm(data=data, APC...USD.~)
?gbm
gbm1 <- gbm(data=data, APC...USD.~.)
gbm1 <- gbm(data=data_sub, APC...USD.~.)
is.na(data_sub$APC...USD.)
which(is.na(data_sub$APC...USD.))
data_gbm <- data_sub[-which(is.na(data_sub$APC...USD.)),]
gbm1 <- gbm(data=data_gbm, APC...USD.~.)
gbm1
plot(gbm1)
summary(gbm1)
dev.off()
summary(gbm1)
plot.gbm(gbm1)
varImp(gbm1)
summary(gbm1)
summary(gbm1)$var
ggplot(summary(gbm1), aes(x=var, y=rel.inf))+
geom_point()
ggplot(summary(gbm1), aes(x=var, y=rel.inf))+
geom_bar(stat = "identity")
ggplot(summary(gbm1), aes(x=var, y=rel.inf))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(summary(gbm1), aes(x=var, y=rel.inf))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot(gbm1)
plot(gbm1, i.var=2)
plot(gbm1, i.var=1)
plot(gbm1, i.var=3)
plot(gbm1, i.var=2)
plot(gbm1, i.var=1)
plot(gbm1, i.var=3)
plot(gbm1, i.var=4)
plot(gbm1, i.var=5)
plot(gbm1, i.var=6)
plot(gbm1, i.var=7)
plot(gbm1, i.var=8)
# vim missing data
library(mice)
data <- airquality
md.pattern(data)
# The better option
library(VIM)
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data),
cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
library(leaflet)
leaflet() %>%
addTiles()
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite")
# Print the providers list included in the leaflet library
providers
leaflet() %>%
addProviderTiles("NASAGIBS.ViirsEarthAtNight2012")
library(leaflet)
leaflet() %>%
addProviderTiles("OpenTopoMap")
# Print only the names of the map tiles in the providers list
names(providers)
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
#fitBounds(
#  lng1 = 13, lat1 = 53,
#  lng2 = 14, lat2 = 52) %>%
addMarkers(lng = c(13.379609, 13.348745), lat = c(52.529969, 52.550721))
library(htmlwidgets)
library(leaflet)
coords <- data.frame(lng = c(13.379609, 13.347779),
lat = c(52.529969, 52.548627),
location = c("Work", "Nussbreite"),
marker = c("frog.png", "drink.png"))
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
addMarkers(lng=coords$lng, lat=coords$lat, popup = coords$location)
m = leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
addMarkers(lng=coords$lng, lat=coords$lat, popup = coords$location,
icon = icons(iconUrl = c("frog.png", "drink.png"), iconWidth = 40, iconHeight = 40)
)
library(htmlwidgets)
?colorbrewe
?colorbrewer
leaflet() %>% addMarkers(
data = iconData,
icon = ~ icons(
iconUrl = sprintf("http://leafletjs.com/examples/custom-icons/leaf-%s.png", group),
shadowUrl = "http://leafletjs.com/examples/custom-icons/leaf-shadow.png",
iconWidth = 38, iconHeight = 95, shadowWidth = 50, shadowHeight = 64,
iconAnchorX = 22, iconAnchorY = 94, shadowAnchorX = 4, shadowAnchorY = 62,
popupAnchorX = -3, popupAnchorY = -76
)
)
library(dplyr)
mtcars %<% colSums()
library(dplyr)
mtcars %<% colSums()
mtcars %>% colSums()
mtcars %>% colSums
mtcars$cyl %>% log
mtcars %>% summary
?%>%
?"%>%"
mtcars$cyl %<>% log
library(magrittr)
?`magrittr-package`
mtcars$cyl %<>% log
mtcars$cyl
m = leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
addMarkers(lng=coords$lng, lat=coords$lat, popup = coords$location,
icon = icons(iconUrl = c("frog.png", "drink.png"), iconWidth = 40, iconHeight = 40)
)
m
# Leaflet exercise
library(leaflet)
leaflet() %>%
addTiles()
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite")
# Print the providers list included in the leaflet library
providers
leaflet() %>%
addProviderTiles("NASAGIBS.ViirsEarthAtNight2012")
library(leaflet)
leaflet() %>%
addProviderTiles("OpenTopoMap")
# Print only the names of the map tiles in the providers list
names(providers)
# get coordinates # GOOGLE API ALERT
#library(ggmap)
#geocode("350 5th Ave, New York, NY 10118")
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
#fitBounds(
#  lng1 = 13, lat1 = 53,
#  lng2 = 14, lat2 = 52) %>%
addMarkers(lng = c(13.379609, 13.348745), lat = c(52.529969, 52.550721))
library(htmlwidgets)
library(leaflet)
coords <- data.frame(lng = c(13.379609, 13.347779),
lat = c(52.529969, 52.548627),
location = c("Work", "Nussbreite"),
marker = c("frog.png", "drink.png"))
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
addMarkers(lng=coords$lng, lat=coords$lat, popup = coords$location)
m = leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
addMarkers(lng=coords$lng, lat=coords$lat, popup = coords$location,
icon = icons(iconUrl = c("frog.png", "drink.png"), iconWidth = 40, iconHeight = 40)
)
m
leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
addMarkers(lng=coords$lng, lat=coords$lat, popup = coords$location,
icon = icons(iconUrl = c("frog.png", "drink.png"), iconWidth = 40, iconHeight = 40)
)
setwd("~/Work/analysis")
m = leaflet() %>%
addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
addMarkers(lng=coords$lng, lat=coords$lat, popup = coords$location,
icon = icons(iconUrl = c("frog.png", "drink.png"), iconWidth = 40, iconHeight = 40)
)
m
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/Documents/Eryops1.github.io")
rmarkdown::render_site()
library(map)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
?maps
?providerTileOptions
?map
map("germany")
map("europe")
help(package='maps')
rmarkdown::render_site()
rmarkdown::render_site()
install.packages("rmarkdown")
rmarkdown::render_site()
install.packages("htmlwidgets")
rmarkdown::render_site()
install.packages("leaflet")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
?eslint
??eslint
leavelet
leavlet
??leavelet
??leaflet
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
